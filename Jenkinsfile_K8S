pipeline {
    agent any

    tools {
        maven 'maven3.9' // Name must match Global Tool Configuration
    }

    environment {
        SONAR_PROJECT_KEY = 'K8S'
        SONAR_HOST_URL = 'http://localhost:9000'
        IMAGE_NAME = 'allureddy/k8s-java-cicd'
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/allureddy1/Demo-java-cicd.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONAR_TOKEN = credentials('sonar-token') // Must exist in Jenkins credentials
            }
            steps {
                withSonarQubeEnv('My SonarQube Server') {
                    sh """
                        mvn sonar:sonar \
                          -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                          -Dsonar.host.url=${SONAR_HOST_URL} \
                          -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
            }
        }

        stage('Trivy Scan') {
            steps {
                sh """
                    trivy image --exit-code 0 --severity HIGH,CRITICAL ${IMAGE_NAME}:${IMAGE_TAG}
                """
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-creds-id',
                    usernameVariable: 'DOCKERHUB_USERNAME',
                    passwordVariable: 'DOCKERHUB_PASSWORD'
                )]) {
                    sh """
                        echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                        docker push ${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Update Image in GitHub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'github_crdentails',   // Jenkins credentials ID
                    usernameVariable: 'GIT_USERNAME',     // GitHub username
                    passwordVariable: 'GIT_PASSWORD'      // GitHub token or password
                )]) {
                    script {
                        sh """
                            git config --global user.email "allureddy4572@gmail.com"
                            git config --global user.name "${GIT_USERNAME}"

                            # Update the image tag in deployment.yaml
                            sed -i "s|image: allureddy/k8s-java-cicd:.*|image: allureddy/k8s-java-cicd:${BUILD_NUMBER}|" deployment.yaml
                            cat deployment.yaml

                            git add deployment.yaml
                            git commit -m "Update image tag to ${BUILD_NUMBER}" || echo "No changes to commit"

                            # Push with authentication
                            git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/allureddy1/Demo-java-cicd.git main
                        """
                    }
                }
            }
        }
    }
}
